.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.
.TH PASSPHRASE "1" "September 2017" "Passphrase" "Passphrase"
.SH NAME
Passphrase \- Tool to generate cryptographically secure passphrases and passwords
.SH DESCRIPTION
usage: passphrase.py [\-h] [\-\-version] [\-q] [\-p [PASSWORD]] [\-w WORDS]
.IP
[\-n NUMBERS] [\-s SEPARATOR] [\-o OUTPUT] [\-i INPUT] [\-d]
.PP
Generates a cryptographically secure passphrase, based on a wordlist, or a
password, and prints it to standard output.
By default, it uses an embedded EFF Large Wordlist for passphrases.
Passphrases with less than 6 words are considered insecure. A safe bet is
between 6 and 7 words, plus at least a number.
For passwords, use at least 12 characters, but prefer 16 or more.
.PP
Instead of words and numbers, a password (random string of printable
characters from Python String standard) can be generated by
\fB\-p\fR | \fB\-\-password\fR, specifying the length.
A custom wordlist can be specified by \fB\-i\fR | \fB\-\-input\fR, the format must be:
single column, one word per line. If \fB\-d\fR | \fB\-\-diceware\fR is used, the input
file is treated as a diceware wordlist (two columns).
Optionally, \fB\-o\fR | \fB\-\-output\fR can be used to specify an output file (existing
file is overwritten).
The number of words is 6 by default, but it can be changed by \fB\-w\fR | \fB\-\-words\fR.
The number of numbers is 0 by default, but it can be changed by
\fB\-n\fR | \fB\-\-numbers\fR. The generated numbers are between 100000 and 999999.
The default separator is a blank space, but any character or character
sequence can be specified by \fB\-s\fR | \fB\-\-separator\fR.
.SS "Example output:"
.TP
Default parameters:
chalice sheath postcard modular cider size
.TP
Words=3, Numbers=2:
depraved widow office 184022 320264
.TP
Password, 20 chars:
sF#s@B+iR#ZIL\-yUWKPR
.SS "Optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-\-version\fR
print program version and licensing information and
exit
.TP
\fB\-\-newline\fR
print newline at the end of the passphrase/password
.TP
\fB\-q\fR, \fB\-\-quiet\fR
quiet mode, it won't print anything but error messages
(usefull with \fB\-o\fR | \fB\-\-output\fR)
.TP
\fB\-\-uuid4\fR
generate an UUID v4 string
.TP
\fB\-p\fR [PASSWORD], \fB\-\-password\fR [PASSWORD]
generate a password of specified lenght from all
printable characters
.TP
\fB\-w\fR WORDS, \fB\-\-words\fR WORDS
specify the amount of words (0 or more)
.TP
\fB\-n\fR NUMBERS, \fB\-\-numbers\fR NUMBERS
specify the amount of numbers (0 or more)
.TP
\fB\-s\fR SEPARATOR, \fB\-\-separator\fR SEPARATOR
specify a separator character (space by default)
.TP
\fB\-o\fR OUTPUT, \fB\-\-output\fR OUTPUT
specify an output file (existing file is overwritten)
.TP
\fB\-i\fR INPUT, \fB\-\-input\fR INPUT
specify an input file (it must have the following
format: single column, one word per line)
.TP
\fB\-d\fR, \fB\-\-diceware\fR
specify input file as a diceware list (format: two
colums)
.PP
.PP
.SH AUTHOR
.B Passphrase
was written by
.MT hackan@gmail.com
HacKan
.ME .
Check the
.UR https://\:github.com/hackancuba/passphrase-py/
Passphrase repository
.UE 
for more information.

.SH COPYING
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
